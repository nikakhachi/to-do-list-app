{"version":3,"sources":["Header/header.js","Input/input.js","Output/output.js","index.js"],"names":["Header","props","Input","id","onChange","change","value","spellCheck","type","placeholder","required","onClick","submit","className","aria-hidden","Output","done","task","delete","key","App","useState","setTask","todos","setTodos","taskDone","e","target","classList","add","taskOutput","map","index","newTodos","splice","removeTask","toString","event","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"wPAQeA,G,MANA,SAACC,GACZ,OACI,8CCOOC,G,MATD,SAACD,GACX,OACI,sBAAKE,GAAG,QAAR,UACI,uBAAOC,SAAUH,EAAMI,OAAQC,MAAOL,EAAMK,MAAOC,WAAW,QAAQC,KAAK,OAAOC,YAAY,WAAWC,UAAQ,IACjH,wBAAQF,KAAK,SAASL,GAAG,MAAMQ,QAASV,EAAMW,OAA9C,SAAsD,mBAAGC,UAAU,oBAAoBC,cAAY,gBCMhGC,G,MAVA,SAACd,GAEZ,OACQ,sBAAKU,QAASV,EAAMe,KAAsBH,UAAU,OAAOV,GAAIF,EAAME,GAArE,UACI,mBAAGU,UAAU,OAAb,SAAqBZ,EAAMgB,OAC3B,wBAAQJ,UAAU,aAAaF,QAASV,EAAMiB,OAA9C,SAAsD,mBAAGL,UAAU,cAAcC,cAAY,aAFlEb,EAAMkB,OCG3CC,G,MAAM,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAETJ,EAFS,KAEHK,EAFG,OAGUD,mBAAS,IAHnB,mBAGTE,EAHS,KAGFC,EAHE,KAsBVC,EAAW,SAACC,GACY,WAAzBA,EAAEC,OAAOC,UAAU,GACpBF,EAAEC,OAAOC,UAAY,OACW,QAAzBF,EAAEC,OAAOC,UAAU,IAC1BF,EAAEC,OAAOC,UAAUC,IAAI,YAIrBC,EAAaP,EAAMQ,KAAI,SAACd,EAAMe,GAAW,OAC7C,cAAC,EAAD,CAAQhB,KAAMS,EAAUP,OAAQ,kBAff,SAACc,GAClB,IAAIC,EAAQ,YAAOV,GACnBU,EAASC,OAAOF,EAAO,GACvBR,EAASS,GAY6BE,CAAWH,IAAoB7B,GAAI6B,EAAMI,WAAYnB,KAAMA,GAAnCe,MAGhE,OACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOD,OA5Be,WACb,IAARK,IACDO,EAAS,GAAD,mBAAKD,GAAL,CAAYN,KACpBK,EAAQ,MAyB0BjB,OAhCZ,SAACgC,GACzBA,EAAMC,iBACNhB,EAAQe,EAAMV,OAAOrB,QA8B0CA,MAAOW,IACpE,qBAAKd,GAAG,iBAAR,SAA0B2B,SAMhCS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.aaf1b2d2.chunk.js","sourcesContent":["import './header.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <h1>TO-DO LIST</h1>  \r\n    )\r\n}\r\n\r\nexport default Header;","import './input.css';\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <div id='input'>\r\n            <input onChange={props.change} value={props.value} spellCheck=\"false\" type=\"text\" placeholder='New Task' required/>\r\n            <button type='submit' id='add' onClick={props.submit}><i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import './output.css';\r\n\r\nconst Output = (props) => {\r\n\r\n    return (\r\n            <div onClick={props.done} key={props.key} className='item' id={props.id}>\r\n                <p className='task'>{props.task}</p>\r\n                <button className='delete-btn' onClick={props.delete}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Output;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header/header';\nimport Input from './Input/input';\nimport Output from './Output/output';\nimport './app.css'\n\n\nconst App = () => {\n  \n  const [task, setTask] = useState('');\n  const [todos, setTodos] = useState([]);\n\n  const changeTaskHandler = (event) => {\n    event.preventDefault();\n    setTask(event.target.value);\n  }\n  const submitTaskHandler = () => {\n    if(task != ''){\n      setTodos([...todos, task]);\n      setTask('');\n    }\n  }\n\n  const removeTask = (index) => {\n    let newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  }\n\n  const taskDone = (e) => {\n    if(e.target.classList[1] == 'checked'){\n      e.target.classList = 'task';\n    }else if(e.target.classList[0] == 'task'){\n      e.target.classList.add('checked');\n    }    \n  }\n\n  const taskOutput = todos.map((task, index) => {return (\n    <Output done={taskDone} delete={() => removeTask(index)} key={index} id={index.toString()} task={task}/>\n  )});\n\n  return (\n    <div className='app'>\n      <Header />\n      <Input submit={submitTaskHandler} change={changeTaskHandler} value={task}/>\n      <div id='task-container'>{taskOutput}</div>\n    </div> \n  )\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}